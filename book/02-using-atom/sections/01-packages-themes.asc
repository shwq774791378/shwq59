[[_atom_packages]]
=== Atom Packages

First we'll start with the Atom package system. As we mentioned previously, Atom itself is a very basic core of functionality that ships with a number of useful packages that add new features like the https://github.com/atom/tree-view[Tree View] and the https://github.com/atom/settings-view[Settings View].

In fact, there are more than 70 packages that comprise all of the functionality that is available in Atom by default. As some examples, the https://github.com/atom/welcome[Welcome dialog] that you see when you first start it, the https://github.com/atom/spell-check[spell checker], the https://github.com/atom/atom-dark-ui[themes] and the https://github.com/atom/fuzzy-finder[fuzzy finder] are all packages that are separately maintained and all use the same APIs that you have access to, as we'll see in great detail in <<_hacking_atom>>.

This means that packages can be incredibly powerful and can change everything from the very look and feel of the entire interface to the basic operation of even core functionality.

In order to install a new package, you can use the Packages tab in the now familiar Settings view. Simply open up the Settings view (`cmd-,`), click on the ``Packages'' tab and type your search query into the box under Install Packages that hints ``Search Packages''.

The packages listed here have been published to https://atom.io/packages[atom.io] which is the official registry for Atom packages. Searching on the settings pane will go to the atom.io package registry and pull in anything that matches your search terms.

.Package install screen
image::images/packages.png[Package install screen]

All of the packages will come up with an ``Install'' button. Clicking that will download the package and install it and your editor will now start having this functionality.

[[_package_settings]]
==== Package Settings

Once a package is installed in Atom, it will show up in the side pane in your setting screen, along with all the preinstalled packages that come with Atom. To filter the list in order to find one, you can type into the ``Filter packages'' textbox.

.Package settings screen
image::images/package-settings.png[Package settings screen]

Clicking on one of the package names will give you the settings screen for the package. Here you have the option of changing some of the default variables for the package, seeing what all the command keybindings are, disabling the package temporarily, looking at the source code, seeing the current version of the package, reporting issues and uninstalling the package.

If a new version of any of your packages is released, Atom will automatically detect it and you can upgrade the package from either this screen or from the main package search tab. This helps you easily keep all your installed packages up to date.

[[_atom_themes]]
==== Atom Themes

You can also find and install new themes for Atom from the Settings view. These can be either UI themes or syntax highlighting themes and you can search for them from the ``Themes'' tab, just like searching for new packages.

.Theme search screen
image::images/themes.png[Theme search screen]

Clicking on the ``Learn More'' button on any of the themes will take you to a profile page for the theme on atom.io where there is nearly always a screenshot for seeing what the theme looks like.

Clicking on ``Install'' will install the theme and make it available in the Theme dropdowns as we saw in  <<_color_themes>>.

.Example of the Unity UI theme with Monokai syntax theme
image::images/unity-theme.png[Theme search screen]

[[_atom_command_line]]
==== Command Line

You can also install packages or themes from the command line using `apm`.

Check that you have `apm` installed by running the following command in your terminal:

[source,shell]
----
$ apm help install
----

You should see a message print out with details about the `apm install` command.

If you do not, launch Atom and run the _Atom > Install Shell Commands_ menu to install the `apm` and `atom` commands.

You can also install packages by using the `apm install` command:

* `apm install <package_name>` to install the latest version.

* `apm install <package_name>@<package_version>` to install a specific version.

For example `apm install emmet@0.1.5` installs the `0.1.5` release of the https://github.com/atom/emmet[Emmet] package.

You can also use `apm` to find new packages to install. If you run `apm search`, you can search the package registry for a search term.

[source]
----
$ apm search coffee
Search Results For 'coffee' (5)
├── coffee-trace Add smart trace statements to coffee files with one keypress each. (77 downloads, 3 stars)
├── coffee-navigator Code navigation panel for Coffee Script (557 downloads, 8 stars)
├── atom-compile-coffee This Atom.io Package compiles .coffee Files on save to .js files. (myJavascript.coffee -> myJavascript.js) (349 downloads, 4 stars)
├── coffee-lint CoffeeScript linter (3336 downloads, 18 stars)
└── git-grep `git grep` in atom editor (1224 downloads, 9 stars)
----

You can use `apm view` to see more information about a specific package.


[source]
----
$ apm view git-grep
git-grep
├── 0.7.0
├── git://github.com/mizchi/atom-git-grep
├── `git grep` in atom editor
├── 1224 downloads
└── 9 stars

Run `apm install git-grep` to install this package.
----
